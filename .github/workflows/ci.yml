name: UAV Assessment CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  LOCAL_IMAGE: uav-assessment-env:ci
  GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/uav-assessment-env

jobs:
  sim-tests:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          buildkitd-flags: --debug

      - name: üê≥ Build image (load for tests)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.LOCAL_IMAGE }}
          load: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üîß Make scripts executable
        run: |
          chmod +x run_sitl.sh run_mavros.sh
          chmod +x src/uav_tests_cpp/tests/run_e2e.sh

      # ---------------- MAVROS Smoke ----------------
      - name: üß™ MAVROS smoke
        id: mavros_smoke
        shell: bash
        run: |
          docker run --rm -t -v "$PWD":/ws -w /ws ${{ env.LOCAL_IMAGE }} bash -lc '
            set -eo pipefail
            mkdir -p /ws/.ci_artifacts
            source /opt/ros/humble/setup.bash

            ./run_sitl.sh &
            sleep 5
            nohup ./run_mavros.sh 14557 > /tmp/mavros.log 2>&1 &

            ok=0
            for i in $(seq 1 40); do
              source /opt/ros/humble/setup.bash
              if ros2 topic list 2>/dev/null | grep -q "/mavros/state"; then
                echo "[OK] MAVROS up"; ok=1; break
              fi
              sleep 0.5
            done

            [ -f /tmp/sitl.log ]  && cp /tmp/sitl.log  .ci_artifacts/smoke_sitl.log  || true
            [ -f /tmp/mavros.log ]&& cp /tmp/mavros.log .ci_artifacts/smoke_mavros.log|| true

            test "$ok" -eq 1
          '

      # ---------------- C++ Build ----------------
      - name: üß± Build (colcon)
        id: build_cpp
        shell: bash
        run: |
          docker run --rm -t -v "$PWD":/ws -w /ws ${{ env.LOCAL_IMAGE }} bash -lc '
            set -eo pipefail
            source /opt/ros/humble/setup.bash
            colcon build --symlink-install --packages-up-to uav_tests_cpp
          '

      # ---------------- Task1 Test ----------------
      - name: ‚ñ∂Ô∏è Task 1 ‚Äì Arm/Disarm
        id: task1
        shell: bash
        continue-on-error: true
        run: |
          docker run --rm -t -v "$PWD":/ws -w /ws ${{ env.LOCAL_IMAGE }} bash -lc '
            set -eo pipefail
            source /opt/ros/humble/setup.bash
            source install/setup.bash
            colcon test --packages-select uav_tests_cpp --ctest-args -R "^task1_arm_disarm$" -VV
            colcon test-result --all --verbose
            mkdir -p .ci_artifacts
            [ -f /tmp/sitl_e2e.log ]   && cp /tmp/sitl_e2e.log   .ci_artifacts/task1_sitl.log   || true
            [ -f /tmp/mavros_e2e.log ] && cp /tmp/mavros_e2e.log .ci_artifacts/task1_mavros.log || true
          '

      # ---------------- Task2 Test ----------------
      - name: ‚ñ∂Ô∏è Task 2 ‚Äì Takeoff/Land
        id: task2
        shell: bash
        run: |
          docker run --rm -t -v "$PWD":/ws -w /ws ${{ env.LOCAL_IMAGE }} bash -lc '
            set -eo pipefail
            source /opt/ros/humble/setup.bash
            source install/setup.bash
            colcon test --packages-select uav_tests_cpp --ctest-args -R "^task2_takeoff_land$" -VV
            colcon test-result --all --verbose
            mkdir -p .ci_artifacts
            [ -f /tmp/sitl_e2e.log ]   && cp /tmp/sitl_e2e.log   .ci_artifacts/task2_sitl.log   || true
            [ -f /tmp/mavros_e2e.log ] && cp /tmp/mavros_e2e.log .ci_artifacts/task2_mavros.log || true
          '

      - name: üìé Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: .ci_artifacts

      # ---- GHCR Publish ----
      - name: üîê Login to GHCR
        if: ${{ github.event_name != 'pull_request' && github.repository_owner == github.actor }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Publish image to GHCR
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && github.repository_owner == github.actor && steps.task1.outcome == 'success' && steps.task2.outcome == 'success' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.GHCR_IMAGE }}:latest
            ${{ env.GHCR_IMAGE }}:${{ github.sha }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üìù Summary
        if: always()
        shell: bash
        run: |
          {
            echo "## üõ©Ô∏è UAV Assessment (C++)"
            echo
            echo "- MAVROS smoke: **${{ steps.mavros_smoke.outcome }}**"
            echo "- Task 1 (Arm/Disarm): **${{ steps.task1.outcome }}**"
            echo "- Task 2 (Takeoff/Land): **${{ steps.task2.outcome }}**"
            echo
            echo "<details><summary>üßæ MAVROS smoke ‚Äì log tail</summary>"
            echo '```text'
            [ -f .ci_artifacts/smoke_mavros.log ] && tail -n 80 .ci_artifacts/smoke_mavros.log || echo "(no smoke_mavros.log)"
            echo '```'
            echo "</details>"
            echo "<details><summary>üìÑ Task 1 ‚Äì SITL/MAVROS log tail</summary>"
            echo '```text'
            [ -f .ci_artifacts/task1_sitl.log ] && tail -n 100 .ci_artifacts/task1_sitl.log || echo "(no task1_sitl.log)"
            [ -f .ci_artifacts/task1_mavros.log ] && tail -n 80 .ci_artifacts/task1_mavros.log || echo "(no task1_mavros.log)"
            echo '```'
            echo "</details>"
            echo "<details><summary>üìÑ Task 2 ‚Äì SITL/MAVROS log tail</summary>"
            echo '```text'
            [ -f .ci_artifacts/task2_sitl.log ] && tail -n 100 .ci_artifacts/task2_sitl.log || echo "(no task2_sitl.log)"
            [ -f .ci_artifacts/task2_mavros.log ] && tail -n 80 .ci_artifacts/task2_mavros.log || echo "(no task2_mavros.log)"
            echo '```'
            echo "</details>"
            echo
            echo "### üêã Docker (GHCR)"
            echo '```bash'
            echo "docker pull ${{ env.GHCR_IMAGE }}:latest"
            echo "docker pull ${{ env.GHCR_IMAGE }}:${{ github.sha }}"
            echo "docker run -it --rm ${{ env.GHCR_IMAGE }}:latest bash"
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      - name: ‚ùå Fail job if any failed
        if: ${{ always() && (steps.mavros_smoke.outcome == 'failure' || steps.task1.outcome == 'failure' || steps.task2.outcome == 'failure') }}
        run: exit 1
